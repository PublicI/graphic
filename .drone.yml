pipeline:
  # restore-cache:
  #   image: plugins/s3-cache:1
  #   pull: true
  #   restore: true
  #   secrets: [ aws_access_key_id, aws_secret_access_key ]
  #   root: publici-drone/
  #   mount:
  #     - ./.npm-cache
  #     - ./node_modules

  install:
    image: node:10.13-alpine
    commands:
      - npm config set cache .npm-cache
      - npm ci --production

  generate:
    image: node:10.13-alpine
    commands:
      - npm run generate

  push:
    image: node:10.13-alpine
    secrets: [aws_access_key_id, aws_secret_access_key]
    commands:
      - npm run push
    when:
      branch: master

  # rebuild-cache:
  #   image: plugins/s3-cache:1
  #   pull: true
  #   rebuild: true
  #   secrets: [ aws_access_key_id, aws_secret_access_key ]
  #   root: publici-drone/
  #   mount:
  #     - ./.npm-cache
  #     - ./node_modules
  #   when:
  #     branch: master

  # flush-cache:
  #   image: plugins/s3-cache:1
  #   pull: true
  #   secrets: [ aws_access_key_id, aws_secret_access_key ]
  #   root: publici-drone/
  #   flush: true

  slack:
    image: plugins/slack
    secrets: [ slack_webhook ]
    when:
      status: [ success, failure ]
    template: >
      {{#success build.status}}
        published https://apps.publicintegrity.org/graphic/
      {{else}}
        failed publishing https://apps.publicintegrity.org/graphic/
      {{/success}}
